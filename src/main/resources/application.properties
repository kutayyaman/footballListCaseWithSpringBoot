# DataSource Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/FOOTBALLLISTCASEDB
spring.datasource.username=postgres
spring.datasource.password=admin
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

logging.level.root= INFO
logging.level.org.springframework.web= DEBUG
logging.level.org.hibernate= DEBUG

# bu @UniqueEmail anatasyonumla alakali bir sorunu cozuyor ancak sorunu tam anlayamadim tekrar kurcala buralari.
# bunu anladim normalde bu validasyon islemleri istek geldigi gibi bir kere calistiriliyor ayrica bide hibernate
# databaseye islem yaparken bu validasyonlari calistiriyor ancak bizim yazdigimiz @UniqueEmail validasyonunda bize
# UserRepository sinifi lazim ve bunu dependency injectionla aliyoruz ancak bu UserRepository bizim Spring Containerda
# bulunuyor yani buna Hibernate erisemiyor ve ozamanda nullpointer exception firlatiyor yani zaten biz en basta
# bu validasyonlari calistiriyoruz ayriyetten hibernate'in calistirmasina gerek yok diye bunu none'a cekiyoruz ve
# boylelikle nullpointer exception almiyoruz.
spring.jpa.properties.javax.persistence.validation.mode= none

#pageable kullanilan sayfalandirmalarda eger pageSize verilmezse default olarak 20 oluyordu onu biz 10 olarak degistirdik.
spring.data.web.pageable.default-page-size=10